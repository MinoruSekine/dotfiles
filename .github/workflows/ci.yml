name: CI

on:
  push:
    branches:
      - master
  pull_request:
  schedule:
    - cron:  0 20 * * 6
  workflow_dispatch:

env:
  os_for_lint: ubuntu-latest
  packages_to_install: shellcheck
  cache_version: v0
  cache_hash_seed_file_path: './.github/workflows/cache_seed_file_for_scoop.txt'

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        include:
          - os: ubuntu-latest
            package_update_command: sudo add-apt-repository ppa:ubuntu-elisp/ppa; sudo apt update
            package_install_command: sudo apt install --no-install-recommends
            emacs_package_name: emacs-snapshot
            to_cache_dir: ''
            skip_install_if_restore_cache: false
            post_process_for_cache: ''
          - os: windows-latest
            package_update_command: ':'
            package_install_command: scoop install
            emacs_package_name: emacs
            to_cache_dir: '~/scoop'
            skip_install_if_restore_cache: true
            post_process_for_cache: 'scoop cache rm "*"'
          - os: macOS-latest
            package_update_command: ''
            package_install_command: brew install
            emacs_package_name: emacs
            to_cache_dir: ''
            skip_install_if_restore_cache: false
            post_process_for_cache: ''

    runs-on: ${{ matrix.os }}

    steps:
    - name: Disable adding CR by Windows git
      run: |
        git config --global core.autocrlf false
        git config --global core.eol lf

    - uses: actions/checkout@v4

    - name: Create cache seed file
      if: matrix.to_cache_dir != ''
      run: echo ${{ env.packages_to_install }}_${{ matrix.emacs_package_name }}_${{ runner.os }} >> ${{ env.cache_hash_seed_file_path }}

    - name: Restore cache if available
      id: restore_cache
      if: matrix.to_cache_dir != ''
      uses: actions/cache@v3
      with:
        path: ${{ matrix.to_cache_dir }}
        key: cache_version_${{ env.cache_version }}-${{ runner.os }}-${{ hashFiles(env.cache_hash_seed_file_path) }}

    - name: Install scoop (Windows)
      uses: MinoruSekine/setup-scoop@v3
      if: contains(matrix.os, 'windows') && steps.restore_cache.outputs.cache-hit != 'true'
      with:
        install_scoop: 'true'
        buckets: extras
        scoop_update: 'true'
        scoop_checkup: 'false'
        update_path: 'true'

    - name: Setup scoop PATH (Windows)
      uses: MinoruSekine/setup-scoop@v3
      if: contains(matrix.os, 'windows') && steps.restore_cache.outputs.cache-hit == 'true'
      with:
        install_scoop: 'false'
        scoop_update: 'false'
        scoop_checkup: 'false'
        update_path: 'true'

    - name: Install supplementals
      if: steps.restore_cache.outputs.cache-hit != 'true' || !matrix.skip_install_if_restore_cache
      env:
        HOMEBREW_NO_AUTO_UPDATE: 1
        HOMEBREW_NO_INSTALL_CLEANUP: 1
      shell: bash
      run: |
        ${{ matrix.package_update_command }}
        ${{ matrix.package_install_command }} ${{ env.packages_to_install }} ${{ matrix.emacs_package_name }}

    - name: Post install supplementals process
      if: matrix.post_process_for_cache != '' && steps.restore_cache.outputs.cache-hit != 'true'
      run: ${{ matrix.post_process_for_cache }}

    - name: Check version of Emacs
      run: emacs --version

    - name: Check load-path
      run: ./.github/workflows/show_emacs_loadpath.sh

    - name: Test run
      if: ${{ contains(matrix.os, 'ubuntu') }}
      shell: bash
      run: |
        make -k -j testrun

    - name: Install elisp-lint
      if: contains(matrix.os, env.os_for_lint)
      shell: bash
      run: emacs -Q --batch -l ./.github/workflows/install-elisp-lint.el -f install-elisp-lint-batch

    - name: Lint
      if: contains(matrix.os, env.os_for_lint)
      shell: bash
      run: make -k -j lint

    - name: Unit tests for Emacs Lisp
      if: ${{ !contains(matrix.os, 'windows') }}
      run: make -k -j test
